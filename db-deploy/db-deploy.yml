# K8 works with API versions to declare the resources

# YML is case sensitive -indentation of YML is important
# use spaces, not a tab
apiVersion: apps/v1
kind: Deployment # what kind of service/object you want to create

# what would you like to call it
metadata:
  name: mssql-deployment # naming the deployment

spec:
  replicas: 1
  selector:
    matchLabels:
      app: mssql # look for this label to match with k8 service

  # template to use it's label for K8 service to launch in the browser
  template:
    metadata:
      labels:
        app: mssql # this label connects to the service or any other k8 components
    
    # Let's define the container spec
    spec:  
      terminationGracePeriodSeconds: 30
      hostname: mssqlinst
      securityContext:
        fsGroup: 10001
      containers:
      - name: mssql
        image: tomasdat/northwind-db:latest
        ports:
        - containerPort: 1433
        env:
        - name: MSSQL_PID
          value: "Developer"
        - name: ACCEPT_EULA
          value: "Y"
        - name: SA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mssql
              key: SA_PASSWORD
        volumeMounts:
          - name: mssql-persistent-storage
            mountPath: /var/lib/mssql
      volumes:
      - name: mssql-persistent-storage
        persistentVolumeClaim:
          claimName: mssql-pv-claim
        
